<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!--Imixs IX XML QueyObject  -  www.imixs.com--><query>
  <itemcollection>
    <itemcollection>
      <item name="txtworkflowmanageruri">
        <value>http://localhost:8080/office-rest/report</value>
      </item>
      <item name="txtattributelist">
        <value>datdate</value>
        <value>_duration</value>
        <value>_subject</value>
        <value>_category</value>
        <value>namcreator</value>
        <value>$created</value>
        <value>txtworkflowstatus</value>
      </item>
      <item name="txtquery">
        <value>SELECT workitem FROM Entity AS workitem
 JOIN workitem.integerItems AS p
 JOIN workitem.textItems AS r
 JOIN workitem.calendarItems AS d
  WHERE workitem.type = 'childworkitem' 
  AND p.itemName = '$processid' 
  AND p.itemValue BETWEEN  6110 AND 6119
  AND d.itemName = 'datdate'
  AND d.itemValue BETWEEN '?von' AND '?bis'
  AND r.itemName='$uniqueidref'
  AND r.itemValue IN (
	SELECT project.id FROM Entity AS project
   	  join project.integerItems AS ipid
	  join project.integerItems AS sequid
	  WHERE ipid.itemName='$processid' AND ipid.itemValue BETWEEN  6000 AND 6099
	  AND sequid.itemName = 'numsequencenumber' AND sequid.itemValue = '?projektnummer'
	)</value>
      </item>
      <item name="txtcontenttype">
        <value>text/xml</value>
      </item>
      <item name="txtencoding">
        <value/>
      </item>
      <item name="txtname">
        <value>zeitabrechnung-support.ixr</value>
      </item>
      <item name="txtxsl">
        <value>&lt;?xml version="1.0" encoding="UTF-8" ?&gt;&#13;
&lt;xsl:stylesheet &#13;
	xmlns="http://www.w3.org/1999/xhtml"&#13;
	xmlns:xsl="http://www.w3.org/1999/XSL/Transform"&#13;
	version="2.0"&gt;

	&lt;xsl:output method="xml" indent="yes"   encoding="UTF-8" /&gt;
	
	&lt;xsl:template match="/"&gt;
		&lt;collection&gt;
			&lt;xsl:apply-templates select="/collection/entity" /&gt;
		&lt;/collection&gt;
	&lt;/xsl:template&gt;

	&lt;!-- Template --&gt;
	&lt;xsl:template match="/collection/entity"&gt;
		&lt;entity&gt;
			&lt;xsl:for-each select="item"&gt;

				&lt;!-- prepare a param for the item name --&gt;
				&lt;xsl:param name="item_name"&gt;
					&lt;xsl:value-of select="translate(name,'$','_')" /&gt;
				&lt;/xsl:param&gt;

				&lt;!-- test if name ist empty --&gt;
				&lt;xsl:if test="$item_name = not('')"&gt;
					&lt;xsl:element name="{$item_name}"&gt;
						
						&lt;xsl:value-of select="value" /&gt;

					&lt;/xsl:element&gt;

				&lt;/xsl:if&gt;

			&lt;/xsl:for-each&gt;
		&lt;/entity&gt;
	&lt;/xsl:template&gt;
&lt;/xsl:stylesheet&gt;</value>
      </item>
    </itemcollection>
  </itemcollection>
</query>
